import logging
from mailjet_rest import Client
from typing import Dict, Any, Optional
from ..config import settings

logger = logging.getLogger(__name__)

class MailjetClient:
    """Mailjet API client for sending email alerts"""
    
    def __init__(self):
        if not settings.MAILJET_API_KEY or not settings.MAILJET_API_SECRET:
            raise ValueError("Mailjet API credentials not configured")
        
        self.client = Client(
            auth=(settings.MAILJET_API_KEY, settings.MAILJET_API_SECRET),
            version='v3.1'
        )
    
    def send_alert_email(
        self,
        recipient_email: str,
        recipient_name: str,
        job_url: str,
        failure_count: int,
        error_message: Optional[str] = None
    ) -> Dict[str, Any]:
        """
        Send email alert for job failure
        
        Args:
            recipient_email: Email address to send alert to
            recipient_name: Name of recipient
            job_url: URL that failed health check
            failure_count: Number of consecutive failures
            error_message: Error message from health check
            
        Returns:
            Dict with send result
        """
        subject = f"ðŸš¨ Health Check Alert: {job_url} is DOWN"
        
        html_content = f"""
        <h2>Health Check Alert</h2>
        <p><strong>URL:</strong> {job_url}</p>
        <p><strong>Status:</strong> DOWN</p>
        <p><strong>Consecutive Failures:</strong> {failure_count}</p>
        {f'<p><strong>Error:</strong> {error_message}</p>' if error_message else ''}
        <p><strong>Time:</strong> {{{{ var:timestamp }}}}</p>
        <hr>
        <p>This alert was generated by your pingDaemon monitoring system.</p>
        <p>Please check your service and resolve the issue.</p>
        """
        
        text_content = f"""
        Health Check Alert
        
        URL: {job_url}
        Status: DOWN
        Consecutive Failures: {failure_count}
        {f'Error: {error_message}' if error_message else ''}
        Time: {{{{ var:timestamp }}}}
        
        This alert was generated by your pingDaemon monitoring system.
        Please check your service and resolve the issue.
        """
        
        data = {
            'Messages': [
                {
                    'From': {
                        'Email': 'noreply@pingdaemon.com',
                        'Name': 'pingDaemon Alert System'
                    },
                    'To': [
                        {
                            'Email': recipient_email,
                            'Name': recipient_name
                        }
                    ],
                    'Subject': subject,
                    'TextPart': text_content,
                    'HTMLPart': html_content,
                    'Variables': {
                        'timestamp': '{{ var:timestamp }}'
                    }
                }
            ]
        }
        
        try:
            result = self.client.send.create(data=data)
            
            if result.status_code == 200:
                logger.info(f"Alert email sent successfully to {recipient_email}")
                return {
                    'success': True,
                    'message_id': result.json()['Messages'][0]['To'][0]['MessageID'],
                    'status': 'sent'
                }
            else:
                logger.error(f"Failed to send email: {result.status_code} - {result.json()}")
                return {
                    'success': False,
                    'error': f"Mailjet API error: {result.status_code}",
                    'status': 'failed'
                }
                
        except Exception as e:
            logger.error(f"Exception sending email: {str(e)}")
            return {
                'success': False,
                'error': str(e),
                'status': 'failed'
            }